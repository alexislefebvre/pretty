#!/usr/bin/env php
<?php

ini_set('display_errors', '1');
error_reporting(E_ALL);

// TODO: "fix" option

$commands = [
    'default' => [
        'php-cs-fixer' => 'php-cs-fixer fix --dry-run --allow-risky=yes --diff',
        'phpcs' => 'phpcs',
        'default' => 'phpcs --standard=PSR2 --extensions=php --ignore=vendor/* .',
    ],
    /**
     * In CI we disable the cache.
     */
    'ci' => [
        'php-cs-fixer' => 'php-cs-fixer fix --dry-run --allow-risky=yes --diff --using-cache=no',
        'phpcs' => 'phpcs --no-cache',
        'default' => 'phpcs --standard=PSR2 --extensions=php --ignore=vendor/* --no-cache .',
    ],
];

$task = isset($argv[1]) ? $argv[1] : 'default';
$commands = $commands[$task];

$command = '';

// Detect which tool to run
if (file_exists('phpcs.xml') || file_exists('phpcs.xml.dist')) {
    echo "CodeSniffer configuration file found, running CodeSniffer\n";
    $command = $commands['phpcs'];
} elseif (file_exists('.php_cs') || file_exists('.php_cs.dist')) {
    echo "PHP-CS-Fixer configuration file found, running PHP-CS-Fixer\n";
    $command = $commands['php-cs-fixer'];
} else {
    echo "No configuration file found, running PHP CodeSniffer with PSR-2\n";
    $command = $commands['default'];
}

// Run the analysis
passthru($command, $exitCode);

exit($exitCode);
